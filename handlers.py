import telebot
from database import *
from config import *
import random
import time

bot = telebot.TeleBot(BOT_TOKEN)
bot_info = bot.get_me()

@bot.message_handler(commands=['start'])
def send_welcome(message):
    print(f"Received /start command with message: {message.text}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ –ø—Ä–æ–±–µ–ª–∞
    if ' ' in message.text:
        command = message.text.split(' ', 1)[-1].strip()
        print(f"Extracted command: {command}")
        if command:
            handle_command(message, command)
            return

    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø *–ë–æ—Ç*, –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π:\n\n"
        "üìö `/help` - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n"
        "üîç –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ `/<–∫–æ–º–∞–Ω–¥–∞>` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤.\n\n"
        "_–ï—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω–µ—Ç–µ—Å—å —Å –∫–∞–∫–∏–º–∏-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –∏–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É_ `/help`."
    )
    bot.reply_to(message, welcome_text, parse_mode='Markdown')

def handle_command(message, command):
    print(f"Handling command: {command}")
    file_ids = get_files_by_command(command)
    if file_ids:
        captcha = str(random.randint(1000, 9999))
        captcha_state[message.from_user.id] = (captcha, file_ids)
        print(f"Generated captcha: {captcha} for user: {message.from_user.id}")
        bot.send_message(message.from_user.id, f"üîí –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É *{captcha}* –≤ —á–∞—Ç–µ ", parse_mode='Markdown')
    else:
        print(f"Command not found: {command}")
        bot.reply_to(message, "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã.", parse_mode='Markdown')




@bot.message_handler(commands=['help'])
def handle_help(message):
    user_id = message.from_user.id
    
    if is_admin(user_id):
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        help_text_admin = (
            "üõ† *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:*\n\n"
            "‚ûï `/addadmin <user_id>` - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
            "‚ûñ `/removeadmin <user_id>` - –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
            "üìÅ `/addfile` - –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –∏ —Å–≤—è–∑–∞—Ç—å –∏—Ö —Å –∫–æ–º–∞–Ω–¥–æ–π.\n"
            "üóë `/removefile <–∫–æ–º–∞–Ω–¥–∞>` - –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π.\n\n"
            "_–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addfile, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å –ø–æ–º–æ—â—å—é_ `/command <–≤–∞—à–∞_–∫–æ–º–∞–Ω–¥–∞>`."
        )
        bot.send_message(message.chat.id, help_text_admin, parse_mode='Markdown')
    else:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        help_text_user = (
            "üìö *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*\n\n"
            "üîë –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ `/<–∫–æ–º–∞–Ω–¥–∞>` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤.\n"
            "üîê –ï—Å–ª–∏ —Ñ–∞–π–ª—ã –∑–∞—â–∏—â–µ–Ω—ã –∫–∞–ø—á–µ–π, —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –∏—Ö –ø–æ–ª—É—á–µ–Ω–∏—è."
        )
        bot.send_message(message.chat.id, help_text_user, parse_mode='Markdown')

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
admin_file_addition_state = {}

@bot.message_handler(commands=['addadmin'])
def handle_add_admin(message):
    if message.from_user.id == ADMIN_IDS[0]:  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω - –ø–µ—Ä–≤—ã–π –≤ —Å–ø–∏—Å–∫–µ
        try:
            user_id = int(message.text.split()[1])
            if add_admin(user_id):
                bot.reply_to(message, "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω.", parse_mode='Markdown')
            else:
                bot.reply_to(message, "‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", parse_mode='Markdown')
        except (IndexError, ValueError):
            bot.reply_to(message, "üö® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `/addadmin <user_id>`", parse_mode='Markdown')
    else:
        bot.reply_to(message, "üõë –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", parse_mode='Markdown')

@bot.message_handler(commands=['removeadmin'])
def handle_remove_admin(message):
    if message.from_user.id == ADMIN_IDS[0]:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
        try:
            user_id = int(message.text.split()[1])
            if remove_admin(user_id):
                bot.reply_to(message, "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω.", parse_mode='Markdown')
            else:
                bot.reply_to(message, "‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.", parse_mode='Markdown')
        except (IndexError, ValueError):
            bot.reply_to(message, "üö® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `/removeadmin <user_id>`", parse_mode='Markdown')
    else:
        bot.reply_to(message, "üõë –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", parse_mode='Markdown')

@bot.message_handler(commands=['addfile'])
def initiate_file_addition(message):
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "üõë –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", parse_mode='Markdown')
        return

    admin_file_addition_state[message.from_user.id] = {'files': [], 'waiting_for_command': True}
    bot.reply_to(message, "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª—ã. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —ç—Ç–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `/command –≤–∞—à–∞_–∫–æ–º–∞–Ω–¥–∞`", parse_mode='Markdown')

@bot.message_handler(content_types=['document'])
def handle_document(message):
    user_id = message.from_user.id
    if user_id in admin_file_addition_state and admin_file_addition_state[user_id]['waiting_for_command']:
        current_time = time.time()
        last_reply_time = admin_file_addition_state[user_id].get('last_reply_time', 0)
        admin_file_addition_state[user_id]['files'].append(message.document.file_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–µ —á–∞—â–µ, —á–µ–º —Ä–∞–∑ –≤ 30 —Å–µ–∫—É–Ω–¥
        if current_time - last_reply_time > 30:  # 30 —Å–µ–∫—É–Ω–¥
            bot.reply_to(message, "üì• –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ, –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞.", parse_mode='Markdown')
            admin_file_addition_state[user_id]['last_reply_time'] = current_time

@bot.message_handler(func=lambda message: message.text.startswith('/command '))
def finalize_file_addition(message):
    user_id = message.from_user.id
    if user_id in admin_file_addition_state and admin_file_addition_state[user_id]['waiting_for_command']:
        command = message.text.split('/command ', 1)[1].strip()
        if command:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞
            if command_exists(command):  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –ë–î
                bot.reply_to(message, f"‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ `{command}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è –∫–æ–º–∞–Ω–¥—ã.", parse_mode='Markdown')
                return

            file_ids = admin_file_addition_state[user_id]['files']
            if add_command_with_files(command, file_ids):
                bot.reply_to(message, f"‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å –∫–æ–º–∞–Ω–¥–æ–π: `{command}`.\n"
                                      f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª—ã –ø–æ —Å—Å—ã–ª–∫–µ: [{bot_info.username}](https://t.me/{bot_info.username}?start={command})", parse_mode='Markdown')
            else:
                bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤.", parse_mode='Markdown')
            del admin_file_addition_state[user_id]
        else:
            bot.reply_to(message, "üö® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–æ—Å–ª–µ `/command`.", parse_mode='Markdown')
    else:
        bot.reply_to(message, "üîô –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã.")

from telebot.types import InputMediaDocument

@bot.message_handler(commands=['removefile'])
def handle_remove_file(message):
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        command_id = message.text.split(maxsplit=1)[1]
    except IndexError:
        bot.reply_to(message, "‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /removefile <–∫–æ–º–∞–Ω–¥–∞>")
        return
    
    # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π
    if remove_file(command_id):
        bot.reply_to(message, f"‚úÖ –§–∞–π–ª—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–º–∞–Ω–¥–æ–π `{command_id}`, –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.", parse_mode='Markdown')
    else:
        bot.reply_to(message, f"‚ö† –§–∞–π–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{command_id}` –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", parse_mode='Markdown')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–ø—á–∏: {user_id: (captcha_value, file_ids)}
captcha_state = {}

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        user_id = message.from_user.id

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ –∫–∞–ø—á–∏
        if message.chat.id == CAPTCHA_CHAT_ID:
            if user_id in captcha_state and message.text == captcha_state[user_id][0]:
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–ø—á–µ–π
                bot.delete_message(CAPTCHA_CHAT_ID, message.message_id)
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ—Ä—Ü–∏—è–º–∏
                send_files_in_chunks(user_id, captcha_state[user_id][1])
                # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–ø—á–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                del captcha_state[user_id]
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                bot.send_message(user_id, "‚úÖ –í–∞—à–∏ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!", parse_mode='Markdown')
                return

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞–ø—á–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ñ–∞–π–ª—ã
        command_text = message.text.strip('/')
        file_ids = get_files_by_command(command_text)
        if file_ids:
            captcha = str(random.randint(1000, 9999))
            captcha_state[user_id] = (captcha, file_ids)
            bot.send_message(user_id, f"üîí –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É *{captcha}* –≤ —á–∞—Ç–µ ", parse_mode='Markdown')
    
    except Exception as e:
        print(f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: {e}")

def handle_command(message, command):
    file_ids = get_files_by_command(command)
    if file_ids:
        captcha = str(random.randint(1000, 9999))
        captcha_state[message.from_user.id] = (captcha, file_ids)
        bot.send_message(message.from_user.id, f"üîí –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É *{captcha}* –≤ —á–∞—Ç–µ ", parse_mode='Markdown')
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã.", parse_mode='Markdown')

def send_files_in_chunks(user_id, file_ids, chunk_size=10, pause=1.5):
    for i in range(0, len(file_ids), chunk_size):
        chunk = file_ids[i:i+chunk_size]
        media_group = [telebot.types.InputMediaDocument(f) for f in chunk]
        bot.send_media_group(user_id, media_group)
        time.sleep(pause)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞


